# Set output locations
$outputDirectory = ".\DlpSitRulePacks"
$logFile = Join-Path $outputDirectory "UnlimitedProximityReport.csv"
$htmlFile = Join-Path $outputDirectory "UnlimitedProximityReport.html"

# Create output directory if it doesn't exist
if (!(Test-Path $outputDirectory)) {
    New-Item -Path $outputDirectory -ItemType Directory | Out-Null
}

# Ensure array is initialized
$logDetails = @()

# Fetch all rule packs
$allRulePacks = Get-DlpSensitiveInformationTypeRulePackage

foreach ($rulePack in $allRulePacks) {
    try {
        if ($rulePack.Name -eq "Microsoft Rule Package") {
            Write-Warning "Skipping Microsoft Rule Package: $($rulePack.Name)"
            continue
        }

        $rulePackXml = $rulePack.ClassificationRuleCollectionXml
        $xmlFilePath = Join-Path $outputDirectory "$($rulePack.Name).xml"
        $rulePackXml | Out-File -Encoding BigEndianUnicode -FilePath $xmlFilePath
        Write-Host "Saved Rule Pack: $($rulePack.Name) to $xmlFilePath" -ForegroundColor Green

        $xmlContent = [xml]$rulePackXml

        # Look for proximity="unlimited"
        $matchingElements = $xmlContent.SelectNodes("//*[@proximity='unlimited']")

        if ($matchingElements.Count -gt 0) {
            foreach ($element in $matchingElements) {
                $idMatch = $element.SelectSingleNode("ancestor-or-self::ClassificationRule/IdMatch/@idRef")

                $logDetails += [PSCustomObject]@{
                    'Rule Pack Name' = $rulePack.Name
                    'Rule Pack ID'   = $rulePack.Id
                    'Element Name'   = $element.Name
                    'Proximity'      = "unlimited"
                    'IdMatch IdRef'  = $idMatch
                    'XML Snippet'    = ($element.OuterXml -replace '\s+', ' ')
                }
            }
        }
    } catch {
        Write-Warning "Failed to process Rule Pack: $($rulePack.Name) - $_"
    }
}

# Export CSV
$logDetails | Export-Csv -Path $logFile -NoTypeInformation -Encoding UTF8
Write-Host "`n✔ CSV report saved to: $logFile" -ForegroundColor Cyan

# Generate HTML
$logDetails | ConvertTo-Html -Property 'Rule Pack Name', 'Rule Pack ID', 'Element Name', 'Proximity', 'IdMatch IdRef', 'XML Snippet' `
    -Title "Unlimited Proximity in DLP SITs" `
    | Out-File -Encoding UTF8 -FilePath $htmlFile

Write-Host "✔ HTML report saved to: $htmlFile" -ForegroundColor Cyan
